# Simple Hello World Application Example
# Deploy with: kubectl apply -f hello-world-app.yaml

---
apiVersion: v1
kind: Namespace
metadata:
  name: hello-world
  labels:
    name: hello-world

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: hello-world
  labels:
    app: hello-world
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-world
        image: nginxdemos/hello:latest
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
  namespace: hello-world
  labels:
    app: hello-world
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: hello-world

---
# Traefik IngressRoute for HTTPS access
# Update the domain to your own domain
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: hello-world
  namespace: hello-world
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`hello.example.com`)  # Change this to your domain
      kind: Rule
      services:
        - name: hello-world
          port: 80
  tls:
    certResolver: letsencrypt
