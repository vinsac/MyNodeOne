---
apiVersion: v1
kind: Namespace
metadata:
  name: demo-apps
  labels:
    pod-security.kubernetes.io/enforce: baseline
    pod-security.kubernetes.io/audit: baseline
    pod-security.kubernetes.io/warn: baseline
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-chat-html
  namespace: demo-apps
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>MyNodeOne Demo</title>
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
        .container { background: white; padding: 40px; border-radius: 10px; box-shadow: 0 10px 40px rgba(0,0,0,0.2); }
        h1 { color: #667eea; }
        .status { background: #e8f5e9; padding: 15px; margin: 20px 0; border-left: 4px solid #4caf50; }
        .status-item { margin: 8px 0; }
        .check { color: #4caf50; font-weight: bold; }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>ðŸš€ MyNodeOne Demo Application</h1>
        <p>This application is running on your Kubernetes cluster with full security hardening!</p>
        
        <div class="status">
          <h2>System Status</h2>
          <div class="status-item"><span class="check">âœ“</span> Kubernetes operational</div>
          <div class="status-item"><span class="check">âœ“</span> Longhorn storage ready (32.8TB)</div>
          <div class="status-item"><span class="check">âœ“</span> Pod Security Standards enforced</div>
          <div class="status-item"><span class="check">âœ“</span> MetalLB load balancer active</div>
          <div class="status-item"><span class="check">âœ“</span> Secrets encryption enabled</div>
          <div class="status-item"><span class="check">âœ“</span> Audit logging active</div>
        </div>
        
        <h2>ðŸ”’ Security Features</h2>
        <ul>
          <li>Running as non-root user</li>
          <li>No privilege escalation</li>
          <li>All capabilities dropped</li>
          <li>Seccomp profile enforced</li>
          <li>Read-only root filesystem</li>
        </ul>
        
        <h2>ðŸ“Š Cluster Resources</h2>
        <p><strong>Total Storage:</strong> 32.8TB (Longhorn)<br>
        <strong>Memory:</strong> 249GB RAM<br>
        <strong>CPUs:</strong> 32 cores<br>
        <strong>Network:</strong> Tailscale VPN</p>
        
        <p style="margin-top: 30px; color: #666; font-size: 0.9em;">
          Deployed on MyNodeOne â€¢ Secured by Pod Security Standards â€¢ Powered by K3s
        </p>
      </div>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-chat-app
  namespace: demo-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-chat-app
  template:
    metadata:
      labels:
        app: demo-chat-app
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: chat-app
        image: nginxinc/nginx-unprivileged:alpine
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
          readOnly: true
      volumes:
      - name: html
        configMap:
          name: demo-chat-html
---
apiVersion: v1
kind: Service
metadata:
  name: demo-chat-app
  namespace: demo-apps
spec:
  type: LoadBalancer
  selector:
    app: demo-chat-app
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
